use utf8;
package ClinStudy::ORM::AssayBatch;

# Created by DBIx::Class::Schema::Loader
# DO NOT MODIFY THE FIRST PART OF THIS FILE

=head1 NAME

ClinStudy::ORM::AssayBatch

=cut

use strict;
use warnings;

use base 'DBIx::Class::Core';

=head1 TABLE: C<assay_batch>

=cut

__PACKAGE__->table("assay_batch");

=head1 ACCESSORS

=head2 id

  data_type: 'integer'
  is_auto_increment: 1
  is_nullable: 0

=head2 date

  data_type: 'date'
  is_nullable: 0

=head2 name

  data_type: 'varchar'
  is_nullable: 0
  size: 31

=head2 operator

  data_type: 'varchar'
  is_nullable: 1
  size: 255

=head2 platform_id

  data_type: 'integer'
  is_foreign_key: 1
  is_nullable: 0

=head2 notes

  data_type: 'text'
  is_nullable: 1

=cut

__PACKAGE__->add_columns(
  "id",
  { data_type => "integer", is_auto_increment => 1, is_nullable => 0 },
  "date",
  { data_type => "date", is_nullable => 0 },
  "name",
  { data_type => "varchar", is_nullable => 0, size => 31 },
  "operator",
  { data_type => "varchar", is_nullable => 1, size => 255 },
  "platform_id",
  { data_type => "integer", is_foreign_key => 1, is_nullable => 0 },
  "notes",
  { data_type => "text", is_nullable => 1 },
);

=head1 PRIMARY KEY

=over 4

=item * L</id>

=back

=cut

__PACKAGE__->set_primary_key("id");

=head1 UNIQUE CONSTRAINTS

=head2 C<name>

=over 4

=item * L</name>

=back

=cut

__PACKAGE__->add_unique_constraint("name", ["name"]);

=head1 RELATIONS

=head2 assays

Type: has_many

Related object: L<ClinStudy::ORM::Assay>

=cut

__PACKAGE__->has_many(
  "assays",
  "ClinStudy::ORM::Assay",
  { "foreign.assay_batch_id" => "self.id" },
  {},
);

=head2 platform_id

Type: belongs_to

Related object: L<ClinStudy::ORM::ControlledVocab>

=cut

__PACKAGE__->belongs_to(
  "platform_id",
  "ClinStudy::ORM::ControlledVocab",
  { id => "platform_id" },
);


# Created by DBIx::Class::Schema::Loader v0.07015 @ 2011-12-12 13:28:19
# DO NOT MODIFY THIS OR ANYTHING ABOVE! md5sum:T/uLvDKj7/JLdg/SxSvBTA


# Custom has_many so that we track the cascade_delete behaviour of the
# database correctly (D::C::Schema::Loader doesn't do this yet). These
# relationships replace the autogenerated ones above, and the latter
# can be deleted when we're finally done with D::C::S::L). FIXME

__PACKAGE__->has_many(
  "assays",
  "ClinStudy::ORM::Assay",
  { "foreign.assay_batch_id" => "self.id" },
  { "cascade_delete"     => 0 },
);

# Default stringification method.
use overload '""' => sub { $_[0]->name . ' (' . $_[0]->date . ')' }, fallback => 1;

1;
